version: '3.9'

services:

  # Next JS & Payload
  site:
    container_name: joshhills-site-${ENVIRONMENT}_site
    image: joshhills-site
    restart: always
    environment:
      MONGODB_URI: mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@joshhills-site-${ENVIRONMENT}_mongo/payload-${ENVIRONMENT}
    networks:
      - default
      - nginx
    build:
      context: .
      network: site
      args:
        MONGODB_URI: mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@joshhills-site-${ENVIRONMENT}_mongo/payload-${ENVIRONMENT}
    ports:
      - "${SITE_PORT}:3000"
    depends_on:
      - mongo
    command: bash -c "/usr/wait-for-it.sh --timeout=0 mongo:27017 && yarn serve"
    volumes:
      - ${PAYLOAD_UPLOADS_PATH}:${PAYLOAD_UPLOADS_PATH}

  # Database
  mongo:
    container_name: joshhills-site-${ENVIRONMENT}_mongo
    image: mongo
    ports:
      - "27017:27017"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_DB: payload-${ENVIRONMENT}
      ENVIRONMENT: ${ENVIRONMENT}
    volumes:
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
      - ${DB_DATA_PATH}:/data/db

  # Database Viewer
  mongo-express:
    container_name: joshhills-site-${ENVIRONMENT}_mongo-express
    image: mongo-express
    restart: always
    ports:
      - "${MONGO_EXPRESS_PORT}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_ROOT_PASSWORD}
      ME_CONFIG_SITE_BASEURL: /db
    networks:
      - default
      - nginx
    depends_on:
      - mongo

networks: 
  default:
    name: site
  nginx:
    external: true